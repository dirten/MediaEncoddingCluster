import os
import sys
import fobs

ffmpeg_path=fobs.FFMPEG_HOME

env = Environment()

ffmpeg_lib_deps = ['avformat', 'avcodec','avutil'] + fobs.EXTERNAL_LIBS
if env['PLATFORM'] == 'posix':
	ffmpeg_lib_deps += ['dl','pthread'] #,z
elif env['PLATFORM'] == 'win32':
	env = Environment(tools=['mingw'])
else:
   ffmpeg_lib_deps += ['z']

env.Append(CPPPATH=[ffmpeg_path, ffmpeg_path+'/libavcodec', ffmpeg_path+'/libavformat', ffmpeg_path+'/libavutil']+fobs.EXTERNAL_INC_PATHS)
env.Append(LIBPATH=[ffmpeg_path+'/libavcodec', ffmpeg_path+'/libavformat', ffmpeg_path+'/libavutil', '#lib']+fobs.EXTERNAL_LIB_PATHS)


if fobs.DEBUG_SYMBOLS == 'yes':
    env.Append(LINKFLAGS=['-g'])
    env.Append(CCFLAGS=['-g'])
if fobs.OPTIMIZATIONS == 'yes':
    env.Append(LINKFLAGS=['-O3'])
    env.Append(CCFLAGS=['-O3'])

if sys.platform == 'darwin':
	env['SHLINKFLAGS'] = '$LINKFLAGS -dynamiclib -read_only_relocs warning -single_module' 

env.Library('#lib/fobs',Split('PacketBuffer.cpp Decoder.cpp Encoder.cpp Transcoder.cpp Error.cpp'))
#env.SharedLibrary('#lib/fobsdyn', Split('PacketBuffer.o Decoder.o Encoder.o Transcoder.o Error.o'), LIBS=['fobs']+ffmpeg_lib_deps)
env.Install('#lib', Split('Decoder.h Encoder.h Transcoder.h Error.h common.h'))
env.Program('#lib/samples/test','test.cpp', LIBS=['fobs']+ffmpeg_lib_deps)
env.Program('#lib/samples/tc','tc.cpp', LIBS=['fobs']+ffmpeg_lib_deps)
env.Program('#lib/samples/reencoder','reencoder.cpp', LIBS=['fobs']+ffmpeg_lib_deps)
