
SET(BUILD_DIR "${CMAKE_CURRENT_BINARY_DIR}/build")

SET(POCO_CONFIGURE_COMMAND <SOURCE_DIR>/configure --prefix=${BUILD_DIR} --no-tests --no-samples --omit=Data/ODBC,Data/MySQL,NetSSL_OpenSSL,Crypto,PageCompiler)

IF(MINGW)
  SET(POCO_CONFIGURE_COMMAND ${POCO_CONFIGURE_COMMAND} --config=MinGW-w64 --shared)
ENDIF(MINGW)

IF(APPLE)
  SET(POCO_CONFIGURE_COMMAND ${POCO_CONFIGURE_COMMAND} --cflags=-mmacosx-version-min=${MAC_OSX_MIN_VERSION} --static)
ENDIF(APPLE)

IF(UNIX)
  SET(POCO_CONFIGURE_COMMAND ${POCO_CONFIGURE_COMMAND} --cflags=-fPIC --static)
ENDIF(UNIX)
MESSAGE("Poco configure with : " ${POCO_CONFIGURE_COMMAND})
ExternalProject_Add(poco
  URL http://pocoproject.org/releases/poco-1.4.6/poco-1.4.6p2-all.tar.gz
  CONFIGURE_COMMAND ${POCO_CONFIGURE_COMMAND}
  BUILD_IN_SOURCE 1
)
#--cflags=-mmacosx-version-min=10.7 
IF(MINGW)
  ExternalProject_Add_Step(poco setup_poco_config_mingw
    COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_SOURCE_DIR}/cmake/MinGW-w64 <SOURCE_DIR>/build/config/MinGW-w64
    DEPENDEES download
    DEPENDERS configure
  )
#  INSTALL(DIRECTORY ${BUILD_DIR}/lib/
#    DESTINATION ${LIB_INSTALL_DIR}
#    FILES_MATCHING PATTERN "*.dll*"
#    PATTERN ".svn" EXCLUDE
#  )
ENDIF(MINGW)

string(TOLOWER ${CMAKE_BUILD_TYPE} LOWERCASE_CMAKE_BUILD_TYPE)
IF(LOWERCASE_CMAKE_BUILD_TYPE STREQUAL "debug")
    message("debug mode")
    SET(POCO_LIBRARY_SUFFIX "d.a")
  ELSE(LOWERCASE_CMAKE_BUILD_TYPE STREQUAL "debug")
    SET(POCO_LIBRARY_SUFFIX ".a")
ENDIF(LOWERCASE_CMAKE_BUILD_TYPE STREQUAL "debug")

SET(POCO_DIR "${BUILD_DIR}")
SET(POCO_LIB_FOUNDATION ${BUILD_DIR}/lib/libPocoFoundation${POCO_LIBRARY_SUFFIX})
SET(POCO_LIB_NET ${BUILD_DIR}/lib/libPocoNet${POCO_LIBRARY_SUFFIX})
SET(POCO_LIB_NET_UTIL ${BUILD_DIR}/lib/libPocoUtil${POCO_LIBRARY_SUFFIX})
SET(POCO_LIB_XML ${BUILD_DIR}/lib/libPocoXML${POCO_LIBRARY_SUFFIX})
SET(POCO_LIB_ZIP ${BUILD_DIR}/lib/libPocoZip${POCO_LIBRARY_SUFFIX})

