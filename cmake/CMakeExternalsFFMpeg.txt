
set(BUILD_DIR "${CMAKE_CURRENT_BINARY_DIR}/build")

set(xvid_version "1.3.2")
set(vpx_version "1.2.0")
SET(FFMPEG_SHARED NO)
#SET(CFLAGS "CFLAGS='-m32 -arch i386'")
#SET(LDFLAGS "LDFLAGS=-m32 -arch i386")
#SET(ENV{CFLAGS} "$ENV{CFLAGS} -m32 -arch i386")
#SET(ENV{LDFLAGS} "$ENV{LDFLAGS} -m32 -arch i386")
SET(FFMPEG_LIB_DIR lib)

IF(MINGW)
  SET(USER_CONFIG "--host=x86_64-w64-mingw32")
  SET(USER_X264_CONFIG "--host=x86_64-w64-mingw32" "--cross-prefix=x86_64-w64-mingw32-")
  SET(USER_FFMPEG_CONFIG "--cross-prefix=x86_64-w64-mingw32-" "--arch=x86_64"   "--target-os=mingw32" "--enable-cross-compile" "--disable-w32threads" "--enable-memalign-hack" )
  SET(USER_VPX_CONFIG "--target=x86_64-win64-gcc")
  SET(USER_VPX_ENV "CROSS=x86_64-w64-mingw32-")
  SET(USER_CMAKE_CONFIG "-DCMAKE_TOOLCHAIN_FILE=${PROJECT_SOURCE_DIR}/cmake/Toolchain-mingw32.cmake")
#  SET(FFMPEG_LIB_DIR bin)
ENDIF(MINGW)

IF(DEBUG)
  #SET(USER_FFMPEG_CONFIG "--disable-optimizations" "--disable-asm" )
ENDIF(DEBUG)

ExternalProject_Add(yasm
URL http://www.tortall.net/projects/yasm/releases/yasm-1.2.0.tar.gz
CONFIGURE_COMMAND <SOURCE_DIR>/configure --prefix=${BUILD_DIR}
)

ExternalProject_Add(nasm
URL http://www.nasm.us/pub/nasm/releasebuilds/2.09.04/nasm-2.09.04.tar.gz
CONFIGURE_COMMAND <SOURCE_DIR>/configure --prefix=${BUILD_DIR}
BUILD_IN_SOURCE 1
)

ExternalProject_Add(lame
DEPENDS yasm nasm
URL http://heanet.dl.sf.net/project/lame/lame/3.99/lame-3.99.5.tar.gz
CONFIGURE_COMMAND ${CMAKE_CURRENT_BINARY_DIR}/lame-prefix/src/lame/configure --prefix=${BUILD_DIR} ${USER_CONFIG} --enable-static --disable-shared
BUILD_IN_SOURCE 1
)

ExternalProject_Add(x264dep
DEPENDS yasm nasm
URL http://download.videolan.org/pub/videolan/x264/snapshots/last_x264.tar.bz2
CONFIGURE_COMMAND PATH=${BUILD_DIR}/bin:$ENV{PATH} && <SOURCE_DIR>/configure ${USER_X264_CONFIG} --prefix=${BUILD_DIR} --enable-static --enable-pic
BUILD_COMMAND PATH=${BUILD_DIR}/bin:$ENV{PATH} && make

BUILD_IN_SOURCE 1
)

ExternalProject_Add(liboggdep
URL http://downloads.xiph.org/releases/ogg/libogg-1.1.3.tar.gz
PATCH_COMMAND	autoconf
CONFIGURE_COMMAND <SOURCE_DIR>/configure --prefix=${BUILD_DIR} ${USER_CONFIG} --enable-static --disable-shared --with-pic
BUILD_IN_SOURCE 1
)
SET(EXTRA_CFLAGS "-I${BUILD_DIR}/include")

ExternalProject_Add(libvorbisdep
DEPENDS liboggdep
URL http://downloads.xiph.org/releases/vorbis/libvorbis-1.2.0.tar.gz
CONFIGURE_COMMAND env CFLAGS=-I${BUILD_DIR}/include LDFLAGS=-L${BUILD_DIR}/lib <SOURCE_DIR>/configure --prefix=${BUILD_DIR} ${USER_CONFIG} --with-ogg=${BUILD_DIR} --enable-static --disable-shared --with-pic
BUILD_IN_SOURCE 1
)

ExternalProject_Add(libtheoradep
DEPENDS liboggdep libvorbisdep
URL http://downloads.xiph.org/releases/theora/libtheora-1.1.1.tar.bz2
CONFIGURE_COMMAND env CFLAGS=-I${BUILD_DIR}/include LDFLAGS=-L${BUILD_DIR}/lib <SOURCE_DIR>/configure --prefix=${BUILD_DIR} ${USER_CONFIG} --enable-static --disable-shared --with-ogg-includes=${BUILD_DIR}/include --with-ogg-libraries=${BUILD_DIR}/lib --with-pic --disable-examples
BUILD_COMMAND CFLAGS="-I${BUILD_DIR}/include" && make
BUILD_IN_SOURCE 1
)

ExternalProject_Add(speexdep
DEPENDS liboggdep
URL http://downloads.xiph.org/releases/speex/speex-1.2rc1.tar.gz
CONFIGURE_COMMAND env CFLAGS=-I${BUILD_DIR}/include LDFLAGS=-L${BUILD_DIR}/lib <SOURCE_DIR>/configure --prefix=${BUILD_DIR} ${USER_CONFIG} --enable-static --disable-shared --with-ogg=${BUILD_DIR} --with-pic --disable-examples
BUILD_IN_SOURCE 1
)



#ExternalProject_Add(xviddep
#URL http://downloads.xvid.org/downloads/xvidcore-${xvid_version}.tar.gz
#CONFIGURE_COMMAND cd <SOURCE_DIR>/build/generic/  && CFLAGS=-fPIC && ./configure --prefix=${BUILD_DIR} ${USER_CONFIG} --enable-static --disable-shared
#BUILD_COMMAND cd <SOURCE_DIR>/build/generic && make
#INSTALL_COMMAND cd <SOURCE_DIR>/build/generic && make install
#BUILD_IN_SOURCE 1
#)

ExternalProject_Add(libvpxdep
DEPENDS yasm nasm
URL http://webm.googlecode.com/files/libvpx-v${vpx_version}.tar.bz2
CONFIGURE_COMMAND PATH=${BUILD_DIR}/bin:$ENV{PATH} && ${USER_VPX_ENV} <SOURCE_DIR>/configure --prefix=${BUILD_DIR} ${USER_VPX_CONFIG} --disable-unit-tests --enable-static --disable-shared --enable-pic
BUILD_COMMAND PATH=${BUILD_DIR}/bin:$ENV{PATH} && make
BUILD_IN_SOURCE 1
)

set(EXTRA_LD_FLAGS "-L${BUILD_DIR}/lib")
IF(UNIX)
  set(EXTRA_LD_FLAGS "${EXTRA_LD_FLAGS} -ldl")
ENDIF(UNIX)

SET(EXTRA_CFLAGS "-I${BUILD_DIR}/include -DFF_API_ALLOC_CONTEXT -fPIC")
SET(LIBRARY_SUFFIX ${CMAKE_STATIC_LIBRARY_SUFFIX})
SET(LINKER_ARGS_STATIC --enable-static)
SET(LINKER_ARGS_SHARED --disable-shared)

IF(FFMPEG_SHARED)
  SET(LINKER_ARGS_STATIC --disable-static)
  SET(LINKER_ARGS_SHARED --enable-shared)
  SET(LIBRARY_SUFFIX ${CMAKE_SHARED_LIBRARY_SUFFIX})
ENDIF(FFMPEG_SHARED)


ExternalProject_Add(ffmpeg
DEPENDS lame x264dep liboggdep libtheoradep speexdep libvorbisdep libvpxdep
#URL http://ffmpeg.org/releases/ffmpeg-snapshot.tar.bz2
URL http://ffmpeg.org/releases/ffmpeg-2.1.tar.gz
CONFIGURE_COMMAND PATH=${BUILD_DIR}/bin:$ENV{PATH} && <SOURCE_DIR>/configure --prefix=${BUILD_DIR} ${LINKER_ARGS_STATIC} ${LINKER_ARGS_SHARED} ${USER_FFMPEG_CONFIG} --enable-incompatible-libav-abi --extra-cflags=${EXTRA_CFLAGS} --extra-ldflags=${EXTRA_LD_FLAGS} --enable-libx264 --enable-libmp3lame --enable-libvorbis --enable-libtheora --enable-libvpx --disable-devices --extra-cflags=-fno-common --disable-stripping --disable-zlib --disable-bzlib --disable-iconv --enable-gpl --enable-pic
#--disable-stripping
BUILD_COMMAND PATH=${BUILD_DIR}/bin:$ENV{PATH} && make
BUILD_IN_SOURCE 1
)


SET(FFMPEG_DIR "${BUILD_DIR}")

SET(FFMPEG_AVCODEC_LIBRARY ${BUILD_DIR}/${FFMPEG_LIB_DIR}/libavcodec${LIBRARY_SUFFIX})
SET(FFMPEG_AVFORMAT_LIBRARY ${BUILD_DIR}/${FFMPEG_LIB_DIR}/libavformat${LIBRARY_SUFFIX})
SET(FFMPEG_AVUTIL_LIBRARY ${BUILD_DIR}/${FFMPEG_LIB_DIR}/libavutil${LIBRARY_SUFFIX})
SET(FFMPEG_AVFILTER_LIBRARY ${BUILD_DIR}/${FFMPEG_LIB_DIR}/libavfilter${LIBRARY_SUFFIX})
SET(FFMPEG_SWSCALE_LIBRARY ${BUILD_DIR}/${FFMPEG_LIB_DIR}/libswscale${LIBRARY_SUFFIX})
SET(FFMPEG_SWRESAMPLE_LIBRARY ${BUILD_DIR}/${FFMPEG_LIB_DIR}/libswresample${LIBRARY_SUFFIX})
SET(FFMPEG_INCLUDE_DIR ${BUILD_DIR}/include)
#SET(FFMPEG_LIB_DIR ${BUILD_DIR}/${FFMPEG_LIB_DIR})

IF(MINGW_disabled)
  SET(FFMPEG_AVCODEC_LIBRARY ${BUILD_DIR}/${FFMPEG_LIB_DIR}/avcodec${LIBRARY_SUFFIX})
  SET(FFMPEG_AVFORMAT_LIBRARY ${BUILD_DIR}/${FFMPEG_LIB_DIR}/avformat${LIBRARY_SUFFIX})
  SET(FFMPEG_AVUTIL_LIBRARY ${BUILD_DIR}/${FFMPEG_LIB_DIR}/avutil${LIBRARY_SUFFIX})
  SET(FFMPEG_AVFILTER_LIBRARY ${BUILD_DIR}/${FFMPEG_LIB_DIR}/avfilter${LIBRARY_SUFFIX})
  SET(FFMPEG_SWSCALE_LIBRARY ${BUILD_DIR}/${FFMPEG_LIB_DIR}/swscale${LIBRARY_SUFFIX})
  SET(FFMPEG_SWRESAMPLE_LIBRARY ${BUILD_DIR}/${FFMPEG_LIB_DIR}/swresample${LIBRARY_SUFFIX})
  SET(FFMPEG_INCLUDE_DIR ${BUILD_DIR}/include)
  #SET(FFMPEG_LIB_DIR ${BUILD_DIR}/${FFMPEG_LIB_DIR})
ENDIF(MINGW)



