
set(BUILD_DIR "${CMAKE_CURRENT_BINARY_DIR}/build")

SET(BOOST_BUILD_COMMAND <SOURCE_DIR>/bjam --prefix=${BUILD_DIR} ${USER_CONFIG} --with-date_time --with-thread --with-system --with-program_options --with-filesystem --with-serialization --with-signals --with-test link=static threading=multi define=BOOST_USE_WINDOWS_H cxxflags=-fPIC)

IF(MINGW)
  MESSAGE("build boost with mingw")
  SET(BOOST_BUILD_COMMAND ${BOOST_BUILD_COMMAND} --user-config=user-config.jam toolset=gcc-mingw target-os=windows threadapi=win32)
ENDIF(MINGW)

IF(APPLE)
  SET(BOOST_BUILD_COMMAND ${BOOST_BUILD_COMMAND} macosx-version-min=${MAC_OSX_MIN_VERSION})
ENDIF(APPLE)

string(TOLOWER ${CMAKE_BUILD_TYPE} LOWERCASE_CMAKE_BUILD_TYPE)
IF(LOWERCASE_CMAKE_BUILD_TYPE STREQUAL "debug")
  message("debug mode")
  SET(BOOST_BUILD_COMMAND ${BOOST_BUILD_COMMAND} variant=debug)
ELSE(LOWERCASE_CMAKE_BUILD_TYPE STREQUAL "debug")
  SET(BOOST_BUILD_COMMAND ${BOOST_BUILD_COMMAND} variant=release)
ENDIF(LOWERCASE_CMAKE_BUILD_TYPE STREQUAL "debug")


ExternalProject_Add(boost
  URL http://dfn.dl.sourceforge.net/project/boost/boost/1.54.0/boost_1_54_0.tar.gz
  UPDATE_COMMAND <SOURCE_DIR>/bootstrap.sh
  CONFIGURE_COMMAND ""
  INSTALL_COMMAND ""
  BUILD_COMMAND ${BOOST_BUILD_COMMAND} install
  #BUILD_COMMAND ${CMAKE_COMMAND} -E echo <SOURCE_DIR>/bjam --prefix=${BUILD_DIR} ${USER_CONFIG} --with-date_time --with-thread --with-system --with-program_options --with-filesystem --with-serialization --with-signals ${SPECIAL_ARGS} variant=${CMAKE_BUILD_TYPE} link=static threading=multi cxxflags='-fPIC' install
  #BUILD_COMMAND <SOURCE_DIR>/bjam --prefix=${BUILD_DIR} --without-wave --without-context --without-graph link=static threading=multi address-model=32_64 install
  BUILD_IN_SOURCE 1
)

IF(MINGW)
  ExternalProject_Add_Step(boost setup_user_config_mingw
    COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_SOURCE_DIR}/cmake/user-config.jam <SOURCE_DIR>/user-config.jam
    DEPENDEES configure
    DEPENDERS build
  )
ENDIF(MINGW)

SET(BOOST_DIR "${BUILD_DIR}")
SET(Boost_DATE_TIME_LIBRARY_DEBUG "libboost_date_time.a")

SET(Boost_LIBRARIES libboost_date_time.a libboost_system.a libboost_filesystem.a libboost_serialization.a libboost_program_options.a)
if(WIN32)
    SET(Boost_LIBRARIES ${Boost_LIBRARIES} libboost_thread_win32.a)
ELSE(LINUX)
    SET(Boost_LIBRARIES ${Boost_LIBRARIES} libboost_thread.a)
ENDIF(WIN32)
