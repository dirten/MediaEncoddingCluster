FUNCTION (DOWNLOAD_PACKAGE src trg)
  MESSAGE("Downloading ${src} to ${trg}")
ENDFUNCTION(DOWNLOAD_PACKAGE)

#DOWNLOAD_PACKAGE(in aout)




#add_custom_target(deps DOWNLOAD_PACKAGE)

#add_custom_command(TARGET deps
#  DOWNLOAD_PACKAGE test_src testtarget
#  WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}/source
#)

IF(BUILD_EMBEDDED_FFMPEG)
  file(MAKE_DIRECTORY ${PROJECT_SOURCE_DIR}/deps/stage/ffmpeg)
  MESSAGE("** Configure ffmpeg")
  execute_process(COMMAND  ../../ffmpeg/configure 
                --prefix=${PROJECT_SOURCE_DIR}/deps/stage/ffmpeg
                --enable-swscale
                --enable-gpl
                --disable-shared
                --enable-static
                --disable-stripping
                --disable-devices
                --enable-libx264
                --extra-ldflags=-L${PROJECT_SOURCE_DIR}/deps/stage/x264/lib
                --extra-ldflags=-lpthread
                --extra-cflags=-I${PROJECT_SOURCE_DIR}/deps/stage/x264/include
                WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}/deps/stage/ffmpeg
                OUTPUT_FILE ${PROJECT_SOURCE_DIR}/deps/ffmpeg-configure.log 
                ERROR_FILE ${PROJECT_SOURCE_DIR}/deps/ffmpeg-configure.log)

  MESSAGE("** Build ffmpeg")
  execute_process(COMMAND make WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}/deps/stage/ffmpeg
                  OUTPUT_FILE ${PROJECT_SOURCE_DIR}/deps/ffmpeg-compile.log 
                  ERROR_FILE ${PROJECT_SOURCE_DIR}/deps/ffmpeg-compile.log)

  MESSAGE("** Install ffmpeg")
  execute_process(COMMAND make install WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}/deps/stage/ffmpeg
                  OUTPUT_FILE ${PROJECT_SOURCE_DIR}/deps/ffmpeg-install.log 
                  ERROR_FILE ${PROJECT_SOURCE_DIR}/deps/ffmpeg-install.log)

  file(WRITE ${PROJECT_SOURCE_DIR}/deps/stage/ffmpeg.build "SET(BUILD_EMBEDDED_FFMPEG OFF)")
ENDIF(BUILD_EMBEDDED_FFMPEG)

#download_file "http://www.nasm.us/pub/nasm/releasebuilds/2.06rc16/nasm-2.06rc16.tar.bz2" "nasm.tar.bz2" "nasm.tar"
#download_file "http://www.tortall.net/projects/yasm/releases/yasm-0.8.0.tar.gz" "yasm.tar.gz" "yasm.tar"
#download_file "http://ffmpeg.org/releases/ffmpeg-export-snapshot.tar.bz2" "ffmpeg-export-snapshot.tar.bz2" "ffmpeg-export-snapshot.tar" 
#download_file "http://download.videolan.org/pub/videolan/x264/snapshots/x264$X264_VERSION.tar.bz2" "x264-snapshot.tar.bz2" "x264-snapshot.tar"
#download_file "http://dfn.dl.sourceforge.net/project/lame/lame/3.98.2/lame-398-2.tar.gz" "lame.src.tar.gz" "lame.src.tar"
#download_file "http://downloads.xiph.org/releases/ogg/libogg-1.1.3.tar.gz" "libogg-1.1.3.tar.gz" "libogg-1.1.3.tar"
#download_file "http://downloads.xiph.org/releases/theora/libtheora-1.0.tar.bz2" "libtheora-1.0.tar.bz2" "libtheora-1.0.tar"
#download_file "http://downloads.xiph.org/releases/speex/speex-1.0.5.tar.gz" "speex-1.0.5.tar.gz" "speex-1.0.5.tar"
#download_file "http://downloads.xiph.org/releases/vorbis/libvorbis-1.2.0.tar.gz" "libvorbis-1.2.0.tar.gz" "libvorbis-1.2.0.tar"
#download_file "http://downloads.xvid.org/downloads/xvidcore-1.2.1.tar.gz" "xvidcore-1.2.1.tar.gz" "xvidcore-1.2.1.tar"

IF(WIN32)
  SET(DOWNLOAD_CMD "${PROJECT_SOURCE_DIR}/win32/curl.exe")
  SET(UNZIP_CMD "${PROJECT_SOURCE_DIR}/win32/unzip.exe")
ELSE(WIN32)
  SET(DOWNLOAD_CMD "curl")
  SET(UNZIP_CMD "bunzip2")
  SET(UNTAR_CMD "tar")
ENDIF(WIN32)

add_custom_target(
	build_ffmpeg
	COMMAND ${PROJECT_SOURCE_DIR}/source/boost_1_35_0/tools/jam/stage/${BUILD_JAM_DIR}/bjam
 	            --prefix=${PROJECT_SOURCE_DIR}/source/build/boost
                --layout=system
                variant=release threading=multi link=static --without-python --without-wave --without-graph --without-test --without-mpi --without-iostreams install
#	DEPENDS build_boost_jam
    WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}/source/boost_1_35_0
)

add_custom_target(
	download_ffmpeg
	COMMAND ${DOWNLOAD_CMD} -o ${PROJECT_SOURCE_DIR}/source/nasm.tar.bz2 http://www.nasm.us/pub/nasm/releasebuilds/2.06rc16/nasm-2.06rc16.tar.bz2
	COMMAND ${UNTAR_CMD} -xf ${PROJECT_SOURCE_DIR}/source/nasm.tar.bz2
	COMMAND ${DOWNLOAD_CMD} -o ${PROJECT_SOURCE_DIR}/source/yasm.tar.gz http://www.tortall.net/projects/yasm/releases/yasm-0.8.0.tar.gz
	COMMAND ${UNTAR_CMD} -xf ${PROJECT_SOURCE_DIR}/source/yasm.tar.gz
	COMMAND ${DOWNLOAD_CMD} -o ${PROJECT_SOURCE_DIR}/source/ffmpeg.tar.bz2 http://ffmpeg.org/releases/ffmpeg-export-snapshot.tar.bz2
	COMMAND ${UNTAR_CMD} -xf ${PROJECT_SOURCE_DIR}/source/ffmpeg.tar.bz2
	COMMAND ${DOWNLOAD_CMD} -o ${PROJECT_SOURCE_DIR}/source/x264.tar.bz2 http://download.videolan.org/pub/videolan/x264/snapshots/x264-snapshot-20090611-2245.tar.bz2
	COMMAND ${UNTAR_CMD} -xf ${PROJECT_SOURCE_DIR}/source/x264.tar.bz2
	COMMAND ${DOWNLOAD_CMD} -o ${PROJECT_SOURCE_DIR}/source/lame.tar.gz http://dfn.dl.sourceforge.net/project/lame/lame/3.98.2/lame-398-2.tar.gz
	COMMAND ${UNTAR_CMD} -xf ${PROJECT_SOURCE_DIR}/source/lame.tar.gz
	COMMAND ${DOWNLOAD_CMD} -o ${PROJECT_SOURCE_DIR}/source/libogg.tar.gz http://downloads.xiph.org/releases/ogg/libogg-1.1.3.tar.gz
	COMMAND ${UNTAR_CMD} -xf ${PROJECT_SOURCE_DIR}/source/libogg.tar.gz
	COMMAND ${DOWNLOAD_CMD} -o ${PROJECT_SOURCE_DIR}/source/libtheora.tar.gz http://downloads.xiph.org/releases/theora/libtheora-1.0.tar.bz2
	COMMAND ${UNTAR_CMD} -xf ${PROJECT_SOURCE_DIR}/source/libtheora.tar.gz
	COMMAND ${DOWNLOAD_CMD} -o ${PROJECT_SOURCE_DIR}/source/libspeex.tar.gz http://downloads.xiph.org/releases/speex/speex-1.0.5.tar.gz
	COMMAND ${UNTAR_CMD} -xf ${PROJECT_SOURCE_DIR}/source/libspeex.tar.gz
	COMMAND ${DOWNLOAD_CMD} -o ${PROJECT_SOURCE_DIR}/source/libvorbis.tar.gz http://downloads.xiph.org/releases/vorbis/libvorbis-1.2.0.tar.gz
	COMMAND ${UNTAR_CMD} -xf ${PROJECT_SOURCE_DIR}/source/libvorbis.tar.gz
	COMMAND ${DOWNLOAD_CMD} -o ${PROJECT_SOURCE_DIR}/source/libxvid.tar.gz http://downloads.xvid.org/downloads/xvidcore-1.2.1.tar.gz
	COMMAND ${UNTAR_CMD} -xf ${PROJECT_SOURCE_DIR}/source/libxvid.tar.gz
    WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}/source
)

