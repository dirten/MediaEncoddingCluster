FIND_PATH(BOOST_JAM_DIR
    build_dist.sh
  PATHS
    ${PROJECT_SOURCE_DIR}/deps/boost_1_35_0/tools/jam
  NO_DEFAULT_PATH
)

IF(BUILD_EMBEDDED_BOOST)
  IF(WIN32)
    SET(BUILD_JAM_CMD "build_dist.bat")
  ELSE(WIN32)
    SET(BUILD_JAM_CMD "build_dist.sh")
  ENDIF(WIN32)
  MESSAGE("** Building Boost Jam")
#  FILE(DOWNLOAD http://dfn.dl.sourceforge.net/sourceforge/boost/boost_1_35_0.tar.gz ${PROJECT_SOURCE_DIR}/deps/boost_1_35_0.tar.gz)
	
  execute_process(
	COMMAND ${DOWNLOAD_CMD} -O ${PROJECT_SOURCE_DIR}/source/boost.src.zip --continue http://dfn.dl.sourceforge.net/project/boost/boost/1.35.0/boost_1_35_0.zip
	WORKING_DIRECTORY ${BOOST_JAM_DIR} 
  )
  execute_process(
	COMMAND ${UNZIP_CMD} ${PROJECT_SOURCE_DIR}/source/boost.src.zip
	WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}/source/boost_1_35_0	
  )


  execute_process(COMMAND ${BOOST_JAM_DIR}/${BUILD_JAM_CMD} 
                  WORKING_DIRECTORY ${BOOST_JAM_DIR} 
                  OUTPUT_FILE ${PROJECT_SOURCE_DIR}/deps/jam.log 
                  ERROR_FILE ${PROJECT_SOURCE_DIR}/deps/jam.log)
  MESSAGE("** Building Boost Library")

  execute_process(COMMAND ${BOOST_JAM_DIR}/stage/bin.linuxx86/bjam 
                --prefix=${PROJECT_SOURCE_DIR}/deps/stage/boost
                --layout=system
                variant=release threading=multi link=static --without-python --without-wave --without-graph --without-test --without-mpi install
                WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}/deps/boost_1_35_0
                OUTPUT_FILE ${PROJECT_SOURCE_DIR}/deps/boost.log 
                ERROR_FILE ${PROJECT_SOURCE_DIR}/deps/boost.log)
  file(WRITE ${PROJECT_SOURCE_DIR}/deps/stage/boost.build "SET(BUILD_EMBEDDED_BOOST OFF)")
ENDIF(BUILD_EMBEDDED_BOOST)
add_custom_target(
	build_boost
	COMMAND ${PROJECT_SOURCE_DIR}/source/boost_1_35_0/tools/jam/stage/bin.ntx86/bjam
 	            --prefix=${PROJECT_SOURCE_DIR}/source/build/boost
                --layout=system
                variant=release threading=multi link=static --without-python --without-wave --without-graph --without-test --without-mpi --without-iostreams install
#	DEPENDS build_boost_jam
    WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}/source/boost_1_35_0
)

add_custom_target(
	build_boost_jam
	COMMAND ${PROJECT_SOURCE_DIR}/source/boost_1_35_0/tools/jam/build_dist.bat
    WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}/source/boost_1_35_0/tools/jam
)

add_custom_target(
	prepare_deps
	COMMAND mkdir "source"
    WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}
)

SET(DOWNLOAD_CMD "curl")
SET(UNZIP_CMD "bunzip2")
IF(WIN32)
	SET(DOWNLOAD_CMD "${PROJECT_SOURCE_DIR}/win32/wget.exe")
	SET(UNZIP_CMD "${PROJECT_SOURCE_DIR}/win32/unzip.exe")
ENDIF(WIN32)

add_custom_target(
	download_boost
	COMMAND ${DOWNLOAD_CMD} -O ${PROJECT_SOURCE_DIR}/source/boost.src.zip --continue http://dfn.dl.sourceforge.net/project/boost/boost/1.35.0/boost_1_35_0.zip
	COMMAND ${UNZIP_CMD} ${PROJECT_SOURCE_DIR}/source/boost.src.zip 
	DEPENDS prepare_deps
    WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}/source
)


add_custom_target(
	deps 
	DEPENDS build_boost
)
