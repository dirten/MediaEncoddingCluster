project(breakpad-client)
CMAKE_MINIMUM_REQUIRED(VERSION 2.6.0)

set(CMAKE_INCLUDE_DIRECTORIES_PROJECT_BEFORE ON)
set(CMAKE_INCLUDE_CURRENT_DIR ON)

message(STATUS ${CMAKE_SYSTEM_PROCESSOR})

INCLUDE_DIRECTORIES(
    src/
    ${JRE_HOME}/include
    ${JRE_HOME}/../include
    ${JRE_HOME}/../include/linux
    ${JRE_HOME}/../include/win32
)

set(SOURCES )
set(SOURCES_PROCESSOR)
set(SOURCES_PROCESSOR_STACKWALK)
set(SOURCES_DUMPSYMS)

if (UNIX)
    ADD_DEFINITIONS(-Wall)
    set(SOURCES ${SOURCES}
        src/client/minidump_file_writer.cc
        src/common/convert_UTF.c
        src/common/string_conversion.cc
    )
   

    SET(SOURCES_PROCESSOR_STACKWALK_old ${SOURCES_PROCESSOR_STACKWALK}
    src/processor/minidump_stackwalk.cc
    src/processor/basic_code_modules.cc
    src/processor/basic_source_line_resolver.cc
    src/processor/call_stack.cc
    src/processor/logging.cc
    src/processor/minidump.cc
    src/processor/minidump_processor.cc
    src/processor/pathname_stripper.cc
    src/processor/process_state.cc
    src/processor/simple_symbol_supplier.cc
    src/processor/stackwalker.cc
    src/processor/stackwalker_amd64.cc
    src/processor/stackwalker_ppc.cc
    src/processor/stackwalker_sparc.cc
    src/processor/stackwalker_x86.cc
    )
    
    SET(SOURCES_PROCESSOR_STACKWALK ${SOURCES_PROCESSOR_STACKWALK}
    	src/processor/minidump_stackwalk.cc
	src/processor/basic_code_modules.cc
	src/processor/basic_source_line_resolver.cc
	src/processor/binarystream.cc
	src/processor/call_stack.cc
	src/processor/cfi_frame_info.cc
	src/processor/logging.cc
	src/processor/minidump.cc
	src/processor/minidump_processor.cc
	src/processor/pathname_stripper.cc
	src/processor/process_state.cc
	src/processor/network_source_line_resolver.cc
	src/processor/simple_symbol_supplier.cc
	src/processor/stackwalker.cc
	src/processor/stackwalker_amd64.cc
	src/processor/stackwalker_arm.cc
	src/processor/stackwalker_ppc.cc
	src/processor/stackwalker_sparc.cc
	src/processor/stackwalker_x86.cc
	src/processor/tokenize.cc
	src/processor/udp_network.cc
    
    )

    set(SOURCES_PROCESSOR ${SOURCES_PROCESSOR}
    src/google_breakpad/common/breakpad_types.h
    src/google_breakpad/common/minidump_format.h
    src/google_breakpad/common/minidump_size.h
    src/google_breakpad/processor/basic_source_line_resolver.h
    src/google_breakpad/processor/call_stack.h
    src/google_breakpad/processor/code_module.h
    src/google_breakpad/processor/code_modules.h
    src/google_breakpad/processor/memory_region.h
    src/google_breakpad/processor/minidump.h
    src/google_breakpad/processor/minidump_processor.h
    src/google_breakpad/processor/process_state.h
    src/google_breakpad/processor/source_line_resolver_interface.h
    src/google_breakpad/processor/stack_frame.h
    src/google_breakpad/processor/stack_frame_cpu.h
    src/google_breakpad/processor/stackwalker.h
    src/google_breakpad/processor/symbol_supplier.h
    src/google_breakpad/processor/system_info.h
    src/processor/address_map-inl.h
    src/processor/address_map.h
    src/processor/basic_code_module.h
    src/processor/basic_code_modules.cc
    src/processor/basic_code_modules.h
    src/processor/basic_source_line_resolver.cc
    src/processor/call_stack.cc
    src/processor/contained_range_map-inl.h
    src/processor/contained_range_map.h
    src/processor/linked_ptr.h
    src/processor/logging.h
    src/processor/logging.cc
    src/processor/minidump.cc
    src/processor/minidump_processor.cc
    src/processor/pathname_stripper.cc
    src/processor/pathname_stripper.h
    src/processor/postfix_evaluator-inl.h
    src/processor/postfix_evaluator.h
    src/processor/process_state.cc
    src/processor/range_map-inl.h
    src/processor/range_map.h
    src/processor/scoped_ptr.h
    src/processor/simple_symbol_supplier.cc
    src/processor/simple_symbol_supplier.h
    src/processor/stack_frame_info.h
    src/processor/stackwalker.cc
    src/processor/stackwalker_amd64.cc
    src/processor/stackwalker_amd64.h
    src/processor/stackwalker_ppc.cc
    src/processor/stackwalker_ppc.h
    src/processor/stackwalker_sparc.cc
    src/processor/stackwalker_sparc.h
    src/processor/stackwalker_x86.cc
    src/processor/stackwalker_x86.h
    )

endif(UNIX)

if (WIN32)
    SET(SOURCES  ${SOURCES}
        src/common/windows/guid_string.cc
#        src/common/windows/http_upload.cc
        src/client/windows/crash_generation/client_info.cc
        src/client/windows/crash_generation/crash_generation_client.cc
        src/client/windows/crash_generation/crash_generation_server.cc
        src/client/windows/crash_generation/minidump_generator.cc
        src/client/windows/handler/exception_handler.cc
#        src/client/windows/sender/crash_report_sender.cc
       )
       #ADD_DEFINITIONS(/Zc:wchar_t-)    
    ADD_DEFINITIONS(/GL /D "WIN32" /D "WIN32_LEAN_AND_MEAN" /D "_UNICODE" /D "UNICODE" /EHsc )
    INCLUDE_DIRECTORIES(c:/progra~1/micros~1.0/vc/atlmfc)
    SET(EXTRA_LIBS ole32)
endif (WIN32)

if (UNIX)
    if (APPLE)
     
      INCLUDE_DIRECTORIES(/Developer/Headers/FlatCarbon)
      INCLUDE_DIRECTORIES(src/common/mac)
	ADD_DEFINITIONS(-DHAVE_MACH_O_NLIST_H) 
      FIND_LIBRARY(COCOA_LIBRARY COCOA)
      MARK_AS_ADVANCED(COCOA_LIBRARY)
      SET(EXTRA_LIBS crypto ${COCOA_LIBRARY})

      set(SOURCES_DUMPSYMS ${SOURCES_DUMPSYMS}
	  src/common/dwarf/bytereader.cc
	  src/common/dwarf/functioninfo.cc
	  src/common/dwarf/dwarf2reader.cc
	  src/common/dwarf/dwarf2reader.cc
	  src/common/mac/macho_utilities.cc
	  src/common/mac/file_id.cc
	  src/common/dwarf_cfi_to_module.cc
	  src/common/dwarf/dwarf2reader.cc
	  src/common/dwarf/dwarf2diehandler.cc
	  src/common/dwarf_cu_to_module.cc
	  src/common/dwarf_line_to_module.cc
	  src/common/mac/macho_id.cc
	  src/common/module.cc
	  src/common/stabs_reader.cc
	  src/common/language.cc
	  src/common/stabs_to_module.cc
	  src/common/mac/macho_reader.cc
	  src/common/mac/macho_walker.cc
	  src/common/mac/dump_syms.mm
	  src/tools/mac/dump_syms/dump_syms_tool.mm
	) 

        SET(SOURCES  ${SOURCES}
            src/client/mac/handler/breakpad_nlist_64.cc
            src/client/mac/handler/dynamic_images.cc
            src/client/mac/handler/exception_handler.cc
            src/client/mac/handler/minidump_generator.cc
            src/client/mac/handler/protected_memory_allocator.cc
	    src/client/mac/crash_generation/crash_generation_client.cc
#            src/common/mac/dump_syms.mm
#            src/common/mac/macho_reader.cc
#            src/common/module.cc
#            src/common/dwarf_cfi_to_module.cc
#            src/common/mac/dwarf/bytereader.cc
#            src/common/mac/dwarf/dwarf2reader.cc
#            src/common/mac/dwarf/functioninfo.cc
            src/common/mac/file_id.cc
            src/common/mac/macho_id.cc
            src/common/mac/macho_utilities.cc
            src/common/mac/macho_walker.cc
            src/common/mac/MachIPC.mm
            src/common/mac/string_utilities.cc
            src/common/mac/SimpleStringDictionary.mm
        )
    else (APPLE)
        SET(SOURCES  ${SOURCES}
           src/client/linux/crash_generation/crash_generation_client.cc 
	   src/client/linux/crash_generation/crash_generation_server.cc 
	   src/client/linux/handler/exception_handler.cc 
	   src/client/linux/minidump_writer/linux_dumper.cc 
	   src/client/linux/minidump_writer/minidump_writer.cc 
	   src/client/linux/../minidump_file_writer.cc 
           src/client/linux/../../common/linux/file_id.cc 
	   src/client/linux/../../common/linux/guid_creator.cc 
	   src/client/linux/../../common/string_conversion.cc
            src/client/linux/handler/exception_handler.cc
#            src/client/linux/handler/linux_thread.cc
#            src/client/linux/minidump_writer/minidump_writer.cc
#            src/client/linux/minidump_writer/linux_dumper.cc
#            src/common/linux/dump_symbols.cc
#            src/common/linux/file_id.cc
#            src/common/linux/guid_creator.cc
#            src/common/linux/http_upload.cc
#            src/common/md5.c
           )
ADD_DEFINITIONS(-DHAVE_A_OUT_H)
    set(SOURCES_DUMPSYMS ${SOURCES_DUMPSYMS}
      src/common/linux/dump_symbols.cc
      src/common/stabs_reader.cc
      src/common/module.cc
      src/common/linux/guid_creator.cc
      src/common/linux/file_id.cc
      src/common/dwarf/bytereader.cc
      src/common/dwarf/functioninfo.cc
      src/common/dwarf/dwarf2reader.cc
      src/common/dwarf/dwarf2reader.cc
	src/common/dwarf/bytereader.cc
      src/common/dwarf/functioninfo.cc
      src/common/dwarf/dwarf2reader.cc
      src/common/dwarf_cfi_to_module.cc
      src/common/dwarf/dwarf2reader.cc
      src/common/dwarf/dwarf2diehandler.cc
	src/common/dwarf_cu_to_module.cc
	src/common/module.cc
      src/common/stabs_reader.cc
      src/common/language.cc
      src/common/stabs_to_module.cc
      src/common/dwarf_line_to_module.cc
	src/common/dwarf/dwarf2reader.cc
      src/common/md5.c
      src/tools/linux/dump_syms/dump_syms.cc
    )
    add_executable(minidump_stackwalk ${SOURCES_PROCESSOR_STACKWALK})

    endif (APPLE)
    add_executable(dump_syms ${SOURCES_DUMPSYMS})
endif (UNIX)



add_library(breakpad ${SOURCES})

IF(UNIX AND NOT APPLE)
    SET_TARGET_PROPERTIES( breakpad PROPERTIES COMPILE_FLAGS -fPIC)
ENDIF(UNIX AND NOT APPLE)

target_link_libraries(breakpad ${EXTRA_LIBS})
#target_link_libraries(dump_syms ${EXTRA_LIBS} breakpad)

INSTALL(TARGETS breakpad
  RUNTIME DESTINATION bin
  LIBRARY DESTINATION lib
  ARCHIVE DESTINATION lib
)

#INSTALL(TARGETS dump_syms
#  RUNTIME DESTINATION bin
#  LIBRARY DESTINATION lib
#  ARCHIVE DESTINATION lib
#)
#INSTALL(TARGETS minidump_stackwalk
#  RUNTIME DESTINATION bin
#  LIBRARY DESTINATION lib
#  ARCHIVE DESTINATION lib
#)


IF(APPLE)
  INSTALL(FILES 
    ${PROJECT_SOURCE_DIR}/src/client/mac/handler/exception_handler.h
    DESTINATION include/client/mac/handler
  )
ELSEIF(UNIX)
  INSTALL(FILES 
    ${PROJECT_SOURCE_DIR}/src/client/linux/handler/exception_handler.h
    DESTINATION include/client/linux/handler
  )
  INSTALL(FILES 
    ${PROJECT_SOURCE_DIR}/src/client/linux/crash_generation/crash_generation_client.h
    DESTINATION include/client/linux/crash_generation
  )
  INSTALL(FILES 
    ${PROJECT_SOURCE_DIR}/src/processor/scoped_ptr.h
    DESTINATION include/processor
  )
  INSTALL(FILES 
    ${PROJECT_SOURCE_DIR}/src/common/linux/google_crashdump_uploader.h
    DESTINATION include/common/linux
  )
ELSEIF(WIN32)
#  INSTALL(FILES ${PROJECT_SOURCE_DIR}/src/client/windows/handler/exception_handler.h
#    DESTINATION include/client/windows/handler)
#  INSTALL(FILES ${PROJECT_SOURCE_DIR}/src/client/windows/common/ipc_protocol.h
#    DESTINATION include/client/windows/common
#  )
#  INSTALL(FILES ${PROJECT_SOURCE_DIR}/src/common/windows/string_utils-inl.h
#    DESTINATION include/common/windows
#  )
#  ELSEIF(SOLARIS)
#  INSTALL(FILES ${PROJECT_SOURCE_DIR}/src/client/solaris/handler/exception_handler.h
#    DESTINATION include/client/solaris/handler
#  )
ENDIF(APPLE)

INSTALL(DIRECTORY src/
DESTINATION include
FILES_MATCHING PATTERN "*.h"
PATTERN ".svn" EXCLUDE
PATTERN "gyp" EXCLUDE
PATTERN "testing" EXCLUDE
PATTERN "third_party" EXCLUDE
PATTERN "tools" EXCLUDE
PATTERN "testdata" EXCLUDE
PATTERN ".cc" EXCLUDE
)
#INSTALL(DIRECTORY ${PROJECT_SOURCE_DIR}/src/common
#DESTINATION include/
##PATTERN ".svn" EXCLUDE
#PATTERN ".cc" EXCLUDE
#PATTERN ".h"
#)
#INSTALL(DIRECTORY ${PROJECT_SOURCE_DIR}/src/google_breakpad
#DESTINATION include/
#PATTERN ".svn" EXCLUDE
#PATTERN ".cc" EXCLUDE
#PATTERN ".h"
#)


