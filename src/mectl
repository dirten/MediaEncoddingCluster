#!/bin/sh
#
#  File name:  S75mhive.system
#  Purpose:    Automatically starts MHiveSystemService on Linux/*nix when the
#              system starts
#  Author:     jan.hoelscher@esblab.com
#  Resides in: /etc/rc3.d
#

if [ ! -d /usr/bin ]
then                    # /usr not mounted
        exit
fi
prog="MHiveService"

#if [ $(id -u) != "0" ]
#then
#    echo "You must be root to run the configure script.  Login as root and then run the
#configure script."
#    exit 1
#fi

killproc() {            # kill the named process(es)
        pid=`ps x |
             grep -w $1 |
             grep -v grep |
             awk {'print $1'}`
             echo $pid
        [ "$pid" != "" ] && kill -15 $pid
}
unset COLUMNS
checkproc(){

    lsproc=$(ps xa |grep -E "$MHIVE_HOME"|grep -E $1 |grep -v grep|awk '{print $1}')

#    echo $lsproc
#    if [ -n $lsproc ]; then
#        return 0
#    fi
    return $lsproc
}

usage(){
        echo "Usage: $0 { start | stop | configure | status}"
}

status_runtime(){
	if checkproc "mhive"; then
	    echo "Mhive Runtime is OFF"
	    return 0
#      action $"Running $prog" /bin/false
	else
	    echo "Mhive CLuster Runtime is ON"
      return 1
#      action $"Running $prog" /bin/true
	fi
}

status_server(){
  false
}

status_client(){
  false
}

start_runtime(){
  action $"Starting $prog" /bin/true
  false
}

stop_runtime(){
  false
}

stop_runtime(){
  false
}

start_server(){
#    mhiveproc=checkproc "mhive"
    if status_runtime; then
      echo "starting mhive"
      $MHIVE_HOME/bin/mhive -d &> /dev/null
      else
        echo "MHive Service is allready running!"
        return
    fi
  status_runtime
}
run_server(){
#  RELDIR=$MHIVE_HOME/releases
#  START_ERL_DATA=${1:-$RELDIR/start_erl.data}
  exec $MHIVE_HOME/bin/mhive -r
  status_runtime
}

stop_server(){
  killproc $MHIVE_HOME/bin/mhive
}

start_client(){
  false

}

stop_client(){
  false

}

configure(){
  $BINDIR/erlexec -noshell -mnesia dir "'${MHIVE_HOME}/${DATA_DIR}'" -s mhive configure -s init stop
}

configure_client(){
  false

}

# Start/stop processes required for MHive
current_dir=`pwd`
script_dir=`dirname $0`
cd ${script_dir}/..
MHIVE_HOME=`pwd`
echo $MHIVE_HOME

#DATA_DIR=data
ROOTDIR=${MHIVE_HOME}
#RELDIR=$MHIVE_HOME/releases
#START_ERL_DATA=$RELDIR/start_erl.data
#ERTS_VSN=`awk '{print $1}' $START_ERL_DATA`
#MHIVE_VSN=`awk '{print $2}' $START_ERL_DATA`
#BINDIR=$ROOTDIR/erts-$ERTS_VSN/bin
#EMU=beam
PROGNAME=`echo $0 | sed 's/.*\///'`
#export EMU
#export ROOTDIR
#export BINDIR
#export PROGNAME
# always start the epmd

#checkproc "epmd"
#if [ $? -ne 0 ]; then
#  ${BINDIR}/epmd -daemon
#fi
#${BINDIR}/epmd -daemon

case "$1" in
    'start')
            # Start the MHive Runtime
            #
            start_server
            ;;
    'run')
            # Start the MHive Runtime
            #
            run_server
            ;;
    'stop')
            stop_server
            ;;
#    'configure')
#            configure
#            ;;
    'status')
            status_runtime
            ;;
#    'start_erl')
#        shift
#        ROOTDIR=$1
#        shift
#        RELDIR=$1
#        shift
#        DataFile=$1
#        shift
#
#        ERTS_VSN=`awk '{print $1}' $DataFile`
#        VSN=`awk '{print $2}' $DataFile`
#
#        BINDIR=$ROOTDIR/erts-$ERTS_VSN/bin
#        EMU=beam
#        PROGNAME=`echo $0 | sed 's/.*\///'`
#        export EMU
#        export ROOTDIR
#        export BINDIR
#        export PROGNAME
#        export RELDIR
#
#        exec $BINDIR/erlexec -boot $RELDIR/$VSN/start -config $RELDIR/$VSN/sys ${1+"$@"} -setcookie default -mnesia dir "'${MHIVE_HOME}/${DATA_DIR}'"
#            ;;
    *)
      usage
            ;;
esac

