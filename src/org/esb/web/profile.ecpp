<%include>header.ecpp</%include>
<%pre>
#include "org/esb/sql/Connection.h"
#include "org/esb/sql/PreparedStatement.h"
#include "org/esb/sql/ResultSet.h"
#include <string>
#include "org/esb/av/Codec.h"
#include "org/esb/config/config.h"
using namespace org::esb::sql;
using namespace org::esb::config;
</%pre>
<%args>
int id=0;
std::string action="";
std::string profile_name="";
std::string v_format="";
int v_codec=0;
std::string v_bitrate="";
std::string v_framerate="";
std::string v_width="";
std::string v_height="";
std::string a_channels="";
//std::string a_codec="";
int a_codec=0;
std::string a_bitrate="";
std::string a_samplerate="";
</%args>
<& header>
<%include>menu.tmpl</%include>
<{
    Connection con(Config::getProperty("db.connection"));
    if(id==0){
    Statement stmt=con.createStatement("select * from profiles");
    ResultSet rs=stmt.executeQuery();

    }>
    <table class="list" cellspacing="0" cellpadding="0">
    <tr class="header"><td>Id</td><td>Profile Name</td><td>Format</td><td>Video Codec</td><td>Video Bitrate</td><td>Video Framerate</td></tr>
%    while(rs.next()){
	<tr class="row">
	<td><$rs.getInt("id")$>.</td><td><a href="?id=<$rs.getInt("id")$>"><$rs.getString("profile_name")$></a></td>
	<td><$rs.getString("v_format")$></td>
	<td><$rs.getString("v_codec")$></td>
	<td><$rs.getString("v_bitrate")$></td>
	<td><$rs.getString("v_framerate")$></td>
	</tr>
%    }
    <a href="profile?id=-1">Create new Profile</a>
    </table>
<{  }else{ 
    


    if(strcmp(action.c_str(),"save")==0){
    std::string sql="";
    if(id==-1){
	sql.append("INSERT INTO profiles (profile_name, v_format, v_codec, v_bitrate,v_framerate,v_width, v_height, a_channels, a_codec, a_bitrate,a_samplerate) values"
//	"(?,?,?,?,?,?,?,?,?,?,?)");
	"(:profile_name, :v_format, :v_codec, :v_bitrate,:v_framerate,:v_width, :v_height, :a_channels, :a_codec, :a_bitrate,:a_samplerate)");
//	sql.append("INSERT INTO profiles (profile_name) values(?)");
    }else{
//	sql.append("UPDATE profiles SET profile_name=?, v_format=?, v_codec=?, v_bitrate=?,v_framerate=?,v_width=?, v_height=?, a_channels=?, a_codec=?, a_bitrate=?,a_samplerate=? where id=?");
	sql.append("UPDATE profiles SET profile_name=:profile_name, v_format=:v_format, v_codec=:v_codec, v_bitrate=:v_bitrate,v_framerate=:v_framerate,v_width=:v_width, v_height=:v_height, a_channels=:a_channels, a_codec=:a_codec, a_bitrate=:a_bitrate,a_samplerate=:a_samplerate where id=:id");
//	sql.append("UPDATE profiles SET profile_name=? where id=?");
    }
//    Connection con("/tmp/hive.db");
    PreparedStatement stmt=con.prepareStatement(sql.c_str());
//    std::cout << "sql:"<<sql.c_str()<<std::endl;

    int field=0;
    stmt.setString("profile_name",profile_name);
    stmt.setString("v_format",v_format);
    stmt.setInt("v_codec",v_codec);
    stmt.setString("v_bitrate",v_bitrate);
    stmt.setString("v_framerate",v_framerate);
    stmt.setString("v_width",v_width);
    stmt.setString("v_height",v_height);
    stmt.setString("a_channels",a_channels);
    stmt.setInt("a_codec",a_codec);
    stmt.setString("a_bitrate",a_bitrate);
    stmt.setString("a_samplerate",a_samplerate);
/*
    stmt.setString(field++,profile_name);
    stmt.setString(field++,v_format);
    stmt.setString(field++,v_codec);
    stmt.setString(field++,v_bitrate);
    stmt.setString(field++,v_framerate);
    stmt.setString(field++,v_width);
    stmt.setString(field++,v_height);
    stmt.setString(field++,a_channels);
    stmt.setString(field++,a_codec);
    stmt.setString(field++,a_bitrate);
    stmt.setString(field++,a_samplerate);
    */
    if(id>0){
        stmt.setInt("id",id);    
    }
    stmt.execute();

    }


    PreparedStatement stmt=con.prepareStatement("select * from profiles where id=:id");
    stmt.setInt("id",id);
    ResultSet rs=stmt.executeQuery();
    if(id!=0){
		if(rs.next()){
			action="";
			profile_name=rs.getString("profile_name");
			v_format=rs.getString("v_format");
			v_codec=rs.getInt("v_codec");
			v_bitrate=rs.getString("v_bitrate");
			v_framerate=rs.getString("v_framerate");
			v_width=rs.getString("v_width");
			v_height=rs.getString("v_height");
			a_channels=rs.getString("a_channels");
			a_codec=rs.getInt("a_codec");
			a_bitrate=rs.getString("a_bitrate");
			a_samplerate=rs.getString("a_samplerate");
		}
//	Row row(0);
//	Row row=rs.getRow(0);
}>
    <form name="save_profile" action="profile" method="post">
    <table class="list" cellspacing="0" cellpadding="0">

    <tr><td>Profile Name:</td><td><input type="text" name="profile_name" value="<$profile_name$>"></td></tr>
    <tr><td>Format:</td><td><select name="v_format">
%	AVOutputFormat *f=NULL;
%	while((f= av_oformat_next(f))) {
%		std::string selected="";
%		if(strcmp(f->name,v_format.c_str())==0){
%		    selected="selected";
%		}
	    <option <$selected$> value="<$f->name$>"><$f->long_name$></option>
%	}
	</select></td></tr>
	<tr><td>Video Codec:</td><td><select name="v_codec">

%	AVCodec *p=NULL;
%	while((p= av_codec_next(p))) {
%		std::string selected="";
%		if(p->id==(CodecID)v_codec){
%		    selected="selected";
%		}
%		if(p->encode&&p->type==CODEC_TYPE_VIDEO){
			<option <$selected$> value="<$p->id$>"><$p->name$></option>
%		}
%	}
	</select></td></tr>

    <tr><td>Bit Rate:</td><td><input type="text" name="v_bitrate" value="<$v_bitrate$>"></td></tr>
    <tr><td>Frame Rate:</td><td><input type="text" name="v_framerate" value="<$v_framerate$>"></td></tr>
    <tr><td>Frame Width:</td><td><input type="text" name="v_width" value="<$v_width$>"></td></tr>
    <tr><td>Frame height:</td><td><input type="text" name="v_height" value="<$v_height$>"></td></tr>
    <tr><td>Audio Channels:</td><td><input type="text" name="a_channels" value="<$a_channels$>"></td></tr>

    <tr><td>Audio Codec:</td><td><select name="a_codec">
%	AVCodec *ac=NULL;
%	while((ac= av_codec_next(ac))) {
%		std::string selected="";
%		if(ac->id==(CodecID)a_codec){
%		    selected="selected";
%		}
%		if(ac->encode&&ac->type==CODEC_TYPE_AUDIO){
%		std::string codecId;
%//std::cout << "ACID:"<<codecId<<std::endl;
			<option <$selected$> value="<$ ac->id $>"><$ac->name$></option>
%		}
%	}
    </select></td></tr>
    <tr><td>Audio Bitrate:</td><td><input type="text" name="a_bitrate" value="<$a_bitrate$>"></td></tr>
    <#/*@TODO rs.getInt(11) austauschen durch qualifizierten namen im ResultSet. z.Z. ist das ResultSet noch Buggy, der Wert wird nicht über den Namen aufgelöst*/#>
    <tr><td>Audio Samplerate:</td><td><input type="text" name="a_samplerate" value="<$a_samplerate$>"></td></tr>
    <input type="hidden" name="id" value="<$id$>">
    <tr><td><input type="submit" value="save" name="action"></td></tr>
    </form>
    </table>
%    }
%}
</body>
<html>
