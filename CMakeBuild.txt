SET(FFMPEG_VERSION daily)
SET(WT_VERSION 3.1.6)



SET(DOWNLOAD_CMD curl)
SET(DOWNLOAD_OPTION -C - -o )
SET(UNZIP_CMD unzip)
SET(MAKE_CMD make)
SET(MAKE_CMD_PARAMS all install)
IF(NOT build_type)
    MESSAGE("Build type not set, using default build_type=debug")
    SET(CMAKE_BUILD_TYPE debug)
ELSE(NOT build_type)
    SET(CMAKE_BUILD_TYPE ${build_type})
ENDIF(NOT build_type)
SET(PROJECT_SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR})
SET(TARGET_DIR target/dependency)
IF(WIN32)
    SET(DOWNLOAD_CMD ${PROJECT_SOURCE_DIR}/win32/curl.exe)
    SET(UNZIP_CMD ${PROJECT_SOURCE_DIR}/win32/unzip.exe)
    SET(MAKE_CMD vcbuild.exe)
    SET(SYSTEM win32)
    SET(GCC_VERSION "-vc90")
    IF(NOT CMAKE_MAKE_PROGRAM)
	MESSAGE("CMAKE_MAKE_PROGRAM not set, using default "Visual Studio 9 2008"")
      SET(CMAKE_MAKE_PROGRAM "Visual Studio 9 2008")
      SET(MAKE_CMD vcbuild.exe)
	#SET(CMAKE_MAKE_PROGRAM "NMake Makefiles")
	#SET(MAKE_CMD nmake)
	SET(MAKE_CMD_PARAMS "")
    ENDIF(NOT CMAKE_MAKE_PROGRAM)
ELSEIF(APPLE)
    SET(SYSTEM mac)
    SET(GCC_VERSION "-xgcc40")
    IF(NOT CMAKE_MAKE_PROGRAM)
	MESSAGE("CMAKE_MAKE_PROGRAM not set, using default "Unix Makefiles"")
	SET(CMAKE_MAKE_PROGRAM "Unix Makefiles")
    ENDIF(NOT CMAKE_MAKE_PROGRAM)
ELSE(APPLE)
    SET(SYSTEM linux)
    SET(GCC_VERSION "-gcc41")
    IF(NOT CMAKE_MAKE_PROGRAM)
	MESSAGE("CMAKE_MAKE_PROGRAM not set, using default "Unix Makefiles"")
	SET(CMAKE_MAKE_PROGRAM "Unix Makefiles")
    ENDIF(NOT CMAKE_MAKE_PROGRAM)
ENDIF(WIN32)

FILE(MAKE_DIRECTORY ${TARGET_DIR})

EXECUTE_PROCESS(COMMAND ${DOWNLOAD_CMD} http://codergrid.de/repository/org/esb/boost/boost/1.44.0/boost-1.44.0-${SYSTEM}-${CMAKE_BUILD_TYPE}.zip ${DOWNLOAD_OPTION} ${PROJECT_SOURCE_DIR}/${TARGET_DIR}/boost-1.44.0-${SYSTEM}-${CMAKE_BUILD_TYPE}.zip )
EXECUTE_PROCESS(COMMAND ${DOWNLOAD_CMD} http://codergrid.de/repository/org/esb/breakpad/breakpad/1.5/breakpad-1.5-${SYSTEM}-${CMAKE_BUILD_TYPE}.zip ${DOWNLOAD_OPTION} ${PROJECT_SOURCE_DIR}/${TARGET_DIR}/breakpad-1.5-${SYSTEM}-${CMAKE_BUILD_TYPE}.zip)
EXECUTE_PROCESS(COMMAND ${DOWNLOAD_CMD} http://codergrid.de/repository/org/esb/ffmpeg/ffmpeg/${FFMPEG_VERSION}/ffmpeg-${FFMPEG_VERSION}-${SYSTEM}-${CMAKE_BUILD_TYPE}.zip ${DOWNLOAD_OPTION} ${PROJECT_SOURCE_DIR}/${TARGET_DIR}/ffmpeg-${FFMPEG_VERSION}-${SYSTEM}-${CMAKE_BUILD_TYPE}.zip)
EXECUTE_PROCESS(COMMAND ${DOWNLOAD_CMD} http://codergrid.de/repository/org/esb/libcurl/libcurl/7.21.3-1/libcurl-7.21.3-1-${SYSTEM}-${CMAKE_BUILD_TYPE}.zip ${DOWNLOAD_OPTION} ${PROJECT_SOURCE_DIR}/${TARGET_DIR}/libcurl-7.21.3-1-${SYSTEM}-${CMAKE_BUILD_TYPE}.zip)
EXECUTE_PROCESS(COMMAND ${DOWNLOAD_CMD} http://codergrid.de/repository/org/esb/litesql/litesql/0.3.8-beta-patch-2/litesql-0.3.8-beta-patch-2-${SYSTEM}-${CMAKE_BUILD_TYPE}.zip ${DOWNLOAD_OPTION} ${PROJECT_SOURCE_DIR}/${TARGET_DIR}/litesql-0.3.8-beta-patch-2-${SYSTEM}-${CMAKE_BUILD_TYPE}.zip)
EXECUTE_PROCESS(COMMAND ${DOWNLOAD_CMD} http://codergrid.de/repository/org/esb/log4cplus/log4cplus/1.0.4-rc9/log4cplus-1.0.4-rc9-${SYSTEM}-${CMAKE_BUILD_TYPE}.zip ${DOWNLOAD_OPTION} ${PROJECT_SOURCE_DIR}/${TARGET_DIR}/log4cplus-1.0.4-rc9-${SYSTEM}-${CMAKE_BUILD_TYPE}.zip)
EXECUTE_PROCESS(COMMAND ${DOWNLOAD_CMD} http://codergrid.de/repository/org/esb/safmq/safmq/0.8.3-3/safmq-0.8.3-3-${SYSTEM}-${CMAKE_BUILD_TYPE}.zip ${DOWNLOAD_OPTION} ${PROJECT_SOURCE_DIR}/${TARGET_DIR}/safmq-0.8.3-3-${SYSTEM}-${CMAKE_BUILD_TYPE}.zip)
EXECUTE_PROCESS(COMMAND ${DOWNLOAD_CMD} http://codergrid.de/repository/org/esb/sqlite/sqlite/3.7.2/sqlite-3.7.2-${SYSTEM}-${CMAKE_BUILD_TYPE}.zip ${DOWNLOAD_OPTION} ${PROJECT_SOURCE_DIR}/${TARGET_DIR}/sqlite-3.7.2-${SYSTEM}-${CMAKE_BUILD_TYPE}.zip)
EXECUTE_PROCESS(COMMAND ${DOWNLOAD_CMD} http://codergrid.de/repository/org/esb/wt/wt/${WT_VERSION}/wt-${WT_VERSION}-${SYSTEM}-${CMAKE_BUILD_TYPE}.zip ${DOWNLOAD_OPTION} ${PROJECT_SOURCE_DIR}/${TARGET_DIR}/wt-${WT_VERSION}-${SYSTEM}-${CMAKE_BUILD_TYPE}.zip)
EXECUTE_PROCESS(COMMAND ${DOWNLOAD_CMD} http://codergrid.de/repository/org/esb/jhive/jhive-test-fixtures/1.0/jhive-test-fixtures-1.0.zip ${DOWNLOAD_OPTION} ${PROJECT_SOURCE_DIR}/${TARGET_DIR}/jhive-test-fixtures-1.0.zip)
EXECUTE_PROCESS(COMMAND ${DOWNLOAD_CMD} http://codergrid.de/repository/org/esb/protobuf/protobuf/2.3.0/protobuf-2.3.0-${SYSTEM}-${CMAKE_BUILD_TYPE}.zip ${DOWNLOAD_OPTION} ${PROJECT_SOURCE_DIR}/${TARGET_DIR}/protobuf-2.3.0-${SYSTEM}-${CMAKE_BUILD_TYPE}.zip)
EXECUTE_PROCESS(COMMAND ${DOWNLOAD_CMD} -L http://sourceforge.net/projects/rapidxml/files/rapidxml/rapidxml%201.13/rapidxml-1.13.zip/download ${DOWNLOAD_OPTION} ${PROJECT_SOURCE_DIR}/${TARGET_DIR}/rapidxml-1.13.zip)

IF(WIN32)
	MESSAGE("Download inttypes")

	EXECUTE_PROCESS(COMMAND ${DOWNLOAD_CMD} http://codergrid.de/repository/inttypes/inttypes.h ${DOWNLOAD_OPTION} ${PROJECT_SOURCE_DIR}/${TARGET_DIR}/include/inttypes.h )
	EXECUTE_PROCESS(COMMAND ${DOWNLOAD_CMD} http://codergrid.de/repository/inttypes/stdint.h ${DOWNLOAD_OPTION} ${PROJECT_SOURCE_DIR}/${TARGET_DIR}/include/stdint.h )
ENDIF(WIN32)

MESSAGE("Extracting Files")

MESSAGE("Extracting boost")
EXECUTE_PROCESS(COMMAND ${UNZIP_CMD} -q -o ${PROJECT_SOURCE_DIR}/${TARGET_DIR}/boost-1.44.0-${SYSTEM}-${CMAKE_BUILD_TYPE}.zip -d ${PROJECT_SOURCE_DIR}/${TARGET_DIR}/ )
MESSAGE("Extracting breakpad")
EXECUTE_PROCESS(COMMAND ${UNZIP_CMD} -q -o ${PROJECT_SOURCE_DIR}/${TARGET_DIR}/breakpad-1.5-${SYSTEM}-${CMAKE_BUILD_TYPE}.zip -d ${PROJECT_SOURCE_DIR}/${TARGET_DIR}/)
MESSAGE("Extracting ffmpeg")
EXECUTE_PROCESS(COMMAND ${UNZIP_CMD} -q -o ${PROJECT_SOURCE_DIR}/${TARGET_DIR}/ffmpeg-${FFMPEG_VERSION}-${SYSTEM}-${CMAKE_BUILD_TYPE}.zip -d ${PROJECT_SOURCE_DIR}/${TARGET_DIR}/)
MESSAGE("Extracting libcurl")
EXECUTE_PROCESS(COMMAND ${UNZIP_CMD} -q -o ${PROJECT_SOURCE_DIR}/${TARGET_DIR}/libcurl-7.21.3-1-${SYSTEM}-${CMAKE_BUILD_TYPE}.zip -d ${PROJECT_SOURCE_DIR}/${TARGET_DIR}/)
MESSAGE("Extracting litesql")
EXECUTE_PROCESS(COMMAND ${UNZIP_CMD} -q -o ${PROJECT_SOURCE_DIR}/${TARGET_DIR}/litesql-0.3.8-beta-patch-2-${SYSTEM}-${CMAKE_BUILD_TYPE}.zip -d ${PROJECT_SOURCE_DIR}/${TARGET_DIR}/)
MESSAGE("Extracting log4cplus")
EXECUTE_PROCESS(COMMAND ${UNZIP_CMD} -q -o ${PROJECT_SOURCE_DIR}/${TARGET_DIR}/log4cplus-1.0.4-rc9-${SYSTEM}-${CMAKE_BUILD_TYPE}.zip -d ${PROJECT_SOURCE_DIR}/${TARGET_DIR}/)
MESSAGE("Extracting safmq")
EXECUTE_PROCESS(COMMAND ${UNZIP_CMD} -q -o ${PROJECT_SOURCE_DIR}/${TARGET_DIR}/safmq-0.8.3-3-${SYSTEM}-${CMAKE_BUILD_TYPE}.zip -d ${PROJECT_SOURCE_DIR}/${TARGET_DIR}/)
MESSAGE("Extracting sqlite")
EXECUTE_PROCESS(COMMAND ${UNZIP_CMD} -q -o ${PROJECT_SOURCE_DIR}/${TARGET_DIR}/sqlite-3.7.2-${SYSTEM}-${CMAKE_BUILD_TYPE}.zip -d ${PROJECT_SOURCE_DIR}/${TARGET_DIR}/)
MESSAGE("Extracting wt")
EXECUTE_PROCESS(COMMAND ${UNZIP_CMD} -q -o ${PROJECT_SOURCE_DIR}/${TARGET_DIR}/wt-${WT_VERSION}-${SYSTEM}-${CMAKE_BUILD_TYPE}.zip -d ${PROJECT_SOURCE_DIR}/${TARGET_DIR}/)
MESSAGE("Extracting rapidxml")
EXECUTE_PROCESS(COMMAND ${UNZIP_CMD} -q -o ${PROJECT_SOURCE_DIR}/${TARGET_DIR}/rapidxml-1.13.zip -d ${PROJECT_SOURCE_DIR}/${TARGET_DIR}/include)
MESSAGE("Extracting jhive-text-fixtures")
EXECUTE_PROCESS(COMMAND ${UNZIP_CMD} -q -o ${PROJECT_SOURCE_DIR}/${TARGET_DIR}/jhive-test-fixtures-1.0.zip -d ${PROJECT_SOURCE_DIR}/${TARGET_DIR}/)
MESSAGE("Extracting protobuf")
EXECUTE_PROCESS(COMMAND ${UNZIP_CMD} -q -o ${PROJECT_SOURCE_DIR}/${TARGET_DIR}/protobuf-2.3.0-${SYSTEM}-${CMAKE_BUILD_TYPE}.zip -d ${PROJECT_SOURCE_DIR}/${TARGET_DIR}/)

IF(WIN32)
MESSAGE("Copy Windows Files")

	EXECUTE_PROCESS(COMMAND ${CMAKE_COMMAND} -E copy ${PROJECT_SOURCE_DIR}/${TARGET_DIR}/lib/libcurl.dll.a ${PROJECT_SOURCE_DIR}/${TARGET_DIR}/lib/libcurl.dll.lib)
	EXECUTE_PROCESS(COMMAND ${CMAKE_COMMAND} -E copy ${PROJECT_SOURCE_DIR}/${TARGET_DIR}/lib/libsqlite3.a ${PROJECT_SOURCE_DIR}/${TARGET_DIR}/lib/libsqlite3.lib)


	EXECUTE_PROCESS(COMMAND ${CMAKE_COMMAND} -E copy ${PROJECT_SOURCE_DIR}/${TARGET_DIR}/lib/wtd.lib ${PROJECT_SOURCE_DIR}/${TARGET_DIR}/lib/wt.lib)
	EXECUTE_PROCESS(COMMAND ${CMAKE_COMMAND} -E copy ${PROJECT_SOURCE_DIR}/${TARGET_DIR}/lib/wtextd.lib ${PROJECT_SOURCE_DIR}/${TARGET_DIR}/lib/wtext.lib)
	EXECUTE_PROCESS(COMMAND ${CMAKE_COMMAND} -E copy ${PROJECT_SOURCE_DIR}/${TARGET_DIR}/lib/wthttpd.lib ${PROJECT_SOURCE_DIR}/${TARGET_DIR}/lib/wthttp.lib)

	EXECUTE_PROCESS(COMMAND ${CMAKE_COMMAND} -E copy ${PROJECT_SOURCE_DIR}/${TARGET_DIR}/lib/litesqld.lib ${PROJECT_SOURCE_DIR}/${TARGET_DIR}/lib/litesql.lib)
	EXECUTE_PROCESS(COMMAND ${CMAKE_COMMAND} -E copy ${PROJECT_SOURCE_DIR}/${TARGET_DIR}/lib/litesql_sqlited.lib ${PROJECT_SOURCE_DIR}/${TARGET_DIR}/lib/litesql_sqlite.lib)
	EXECUTE_PROCESS(COMMAND ${CMAKE_COMMAND} -E copy ${PROJECT_SOURCE_DIR}/${TARGET_DIR}/lib/litesql-utild.lib ${PROJECT_SOURCE_DIR}/${TARGET_DIR}/lib/litesql-util.lib)
ENDIF(WIN32)

FILE(MAKE_DIRECTORY ${PROJECT_SOURCE_DIR}/build)

EXECUTE_PROCESS(COMMAND cmake 
                    -G ${CMAKE_MAKE_PROGRAM}
                    -DCMAKE_INSTALL_PREFIX=${PROJECT_SOURCE_DIR}/install
                    -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}
		    -DCMAKE_OSX_ARCHITECTURES=i386
		    -DCMAKE_C_FLAGS=-m32 -arch i386 
		    -DCMAKE_CXX_FLAGS=-m32 -arch i386
                    -DSHARED_LIBS=Off
                    -DBOOST_DIR=${PROJECT_SOURCE_DIR}/${TARGET_DIR}
                    #-DBOOST_COMPILER=${GCC_VERSION}
                    -DFFMPEG_DIR=${PROJECT_SOURCE_DIR}/${TARGET_DIR}
                    -DLOG4CPLUS_DIR=${PROJECT_SOURCE_DIR}/${TARGET_DIR}
                    -DSQLITE_DIR=${PROJECT_SOURCE_DIR}/${TARGET_DIR}
                    -DWT_DIR=${PROJECT_SOURCE_DIR}/${TARGET_DIR}
                    -DBUILD_TESTING=On
                    -DBREAKPAD_DIR=${PROJECT_SOURCE_DIR}/${TARGET_DIR}
                    -DCURL_DIR=${PROJECT_SOURCE_DIR}/${TARGET_DIR}
                    -DLIBRARY_DIR=${PROJECT_SOURCE_DIR}/${TARGET_DIR}/lib
                    -DINCLUDE_DIR=${PROJECT_SOURCE_DIR}/${TARGET_DIR}/include
                    -DINSTALLBUILDER_EXE=${env.INSTALLBUILDER_EXE}
                    ..
                    WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}/build
                    )
EXECUTE_PROCESS(COMMAND ${MAKE_CMD} ${MAKE_CMD_PARAMS} WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}/build)
